group 'nl.leasePlan'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.1.13")
    }
}

repositories {
    mavenLocal()
    jcenter()
}

compileJava { options.encoding = "UTF-8" }
compileTestJava { options.encoding = "UTF-8" }

ext {
    serenityCoreVersion = '2.1.10'
    serenityCucumberVersion = '2.1.2'
    cucumberVersion = '7.2.3'
    lombokVersion = '1.18.12'
    jacksonVersion = '2.11.0'
}

dependencies {
    compile "net.serenity-bdd:serenity-core:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-cucumber4:${serenityCucumberVersion}",
            "net.serenity-bdd:serenity-rest-assured:${serenityCoreVersion}",
            "org.json:json:20190722",
            "io.cucumber:cucumber-core:${cucumberVersion}",
            "io.cucumber:cucumber-junit:${cucumberVersion}",
            "io.cucumber:cucumber-java:${cucumberVersion}",
            "org.assertj:assertj-core:3.16.1",
            "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}",
            'junit:junit:4.13'

    implementation group: 'net.masterthought', name: 'maven-cucumber-reporting', version: '5.6.2'
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '4.5.0'
    testImplementation group: 'com.jayway.restassured', name: 'rest-assured', version: '2.9.0'
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}


configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}
task regressionTests(type: Test) {
    include '**/TestRunner*'
}

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}

task testWithJUnit(type: Test) {
    useJUnitPlatform()
}

gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)
